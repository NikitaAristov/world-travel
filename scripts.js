document.addEventListener("DOMContentLoaded", function () {
    initializeSliders();
});

function initializeSliders() {
    document.querySelectorAll(".slider-container").forEach(container => {
        const slides = container.querySelectorAll(".slide");
        const prevButton = container.querySelector(".prev-slide");
        const nextButton = container.querySelector(".next-slide");

        if (slides.length === 0) return; // –ï—Å–ª–∏ –Ω–µ—Ç —Å–ª–∞–π–¥–æ–≤, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º

        let currentIndex = 0;

        function showSlide(index) {
            slides.forEach((slide, i) => {
                slide.style.display = i === index ? "block" : "none";
            });
        }

        function nextSlide() {
            currentIndex = (currentIndex + 1) % slides.length;
            showSlide(currentIndex);
        }

        function prevSlide() {
            currentIndex = (currentIndex - 1 + slides.length) % slides.length;
            showSlide(currentIndex);
        }

        // –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        prevButton?.addEventListener("click", prevSlide);
        nextButton?.addEventListener("click", nextSlide);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥
        showSlide(currentIndex);

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–º–µ–Ω–∞ —Å–ª–∞–π–¥–æ–≤
        setInterval(nextSlide, 5000); // –ú–µ–Ω—è–µ—Ç —Å–ª–∞–π–¥ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —á–∞—Ç–∞
const chatButton = document.getElementById('chatButton');
const chatContainer = document.getElementById('chatContainer');

function toggleChat() {
    if (chatContainer.style.display === 'none' || chatContainer.style.display === '') {
        chatContainer.style.display = 'block';
        chatButton.classList.add('active');
        chatButton.textContent = '√ó';
    } else {
        chatContainer.style.display = 'none';
        chatButton.classList.remove('active');
        chatButton.textContent = 'üí¨';
    }
}

chatButton?.addEventListener('click', toggleChat);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ datalist
function filterDatalist(inputId, datalistId) {
    const input = document.getElementById(inputId);
    const datalist = document.getElementById(datalistId);
    const options = datalist.getElementsByTagName("option");

    input.addEventListener("input", function () {
        const filter = input.value.toLowerCase();
        for (let option of options) {
            option.style.display = option.value.toLowerCase().includes(filter) ? "" : "none";
        }
    });
}

filterDatalist("city", "city-list");
filterDatalist("category", "category-list");


function toggleAndApplyFilter(filterId) {
    const filterItem = document.querySelector(`.filter-item#${filterId}`);
    const filterContent = document.getElementById(filterId);
    const arrowIcon = document.querySelector(`[onclick="toggleAndApplyFilter('${filterId}')"] i`);

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
    document.querySelectorAll(".filter-item").forEach((item) => {
        if (item.id !== filterId) {
            item.classList.remove("open");
            item.classList.add("close");
            const otherArrow = item.querySelector("i");
            if (otherArrow) {
                otherArrow.classList.remove("rotate");
            }
        }
    });

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∏–ª—å—Ç—Ä
    if (filterItem.classList.contains("open")) {
        filterItem.classList.remove("open");
        filterItem.classList.add("close");
        arrowIcon.classList.remove("rotate");
    } else {
        filterItem.classList.remove("close");
        filterItem.classList.add("open");
        arrowIcon.classList.add("rotate");
    }

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä —á–µ—Ä–µ–∑ AJAX
    applyFilters();
}



    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
    function applyFilters() {
        // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
        const formData = new FormData();

        // –ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        const departureCity = document.getElementById('departure_city')?.value;
        if (departureCity) formData.append('departure_city', departureCity);

        // –ì–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è
        const arrivalCity = document.getElementById('arrival_city')?.value;
        if (arrivalCity) formData.append('arrival_city', arrivalCity);

        // –ö–∞—Ç–µ–≥–æ—Ä–∏—è
        const category = document.getElementById('category')?.value;
        if (category) formData.append('category', category);

        // –î–∞—Ç—ã
        const startDate = document.querySelector('input[name="start_date"]')?.value;
        const endDate = document.querySelector('input[name="end_date"]')?.value;
        if (startDate) formData.append('start_date', startDate);
        if (endDate) formData.append('end_date', endDate);

        // –¶–µ–Ω–∞
        const minPrice = document.getElementById('min-price-input')?.value;
        const maxPrice = document.getElementById('max-price-input')?.value;
        if (minPrice) formData.append('min_price', minPrice);
        if (maxPrice) formData.append('max_price', maxPrice);

        // –û—Ü–µ–Ω–∫–∞
        const ratingMin = document.getElementById('rating-min')?.value;
        if (ratingMin) formData.append('rating_min', ratingMin);

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        const selectedFeatures = Array.from(document.querySelectorAll('input[name="features[]"]:checked'))
            .map(checkbox => checkbox.value);
        if (selectedFeatures.length > 0) {
            formData.append('features', selectedFeatures.join(','));
        }

        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º FormData –≤ —Å—Ç—Ä–æ–∫—É –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        const params = new URLSearchParams(formData).toString();

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ fetch —Å –º–µ—Ç–æ–¥–æ–º GET
        fetch(`catalog.php?${params}`, {
            method: 'GET',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞');
            }
            return response.text();
        })
        .then(html => {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –±–ª–æ–∫ —Å —Ç—É—Ä–∞–º–∏
            document.querySelector('.tour-container').innerHTML = html;

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
            restoreFilters(departureCity, arrivalCity, category, startDate, endDate, minPrice, maxPrice, ratingMin, selectedFeatures);

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ª–∞–π–¥–µ—Ä—ã –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            initializeSliders();
        })
        .catch(error => console.error('–û—à–∏–±–∫–∞:', error));
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
    function restoreFilters(departureCity, arrivalCity, category, startDate, endDate, minPrice, maxPrice, ratingMin, selectedFeatures) {
        // –ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        const departureCityInput = document.getElementById('departure_city');
        if (departureCityInput) departureCityInput.value = departureCity;

        // –ì–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è
        const arrivalCityInput = document.getElementById('arrival_city');
        if (arrivalCityInput) arrivalCityInput.value = arrivalCity;

        // –ö–∞—Ç–µ–≥–æ—Ä–∏—è
        const categoryInput = document.getElementById('category');
        if (categoryInput) categoryInput.value = category;

        // –î–∞—Ç—ã
        const startDateInput = document.querySelector('input[name="start_date"]');
        const endDateInput = document.querySelector('input[name="end_date"]');
        if (startDateInput) startDateInput.value = startDate;
        if (endDateInput) endDateInput.value = endDate;

        // –¶–µ–Ω–∞
        const minPriceInput = document.getElementById('min-price-input');
        const maxPriceInput = document.getElementById('max-price-input');
        if (minPriceInput) minPriceInput.value = minPrice;
        if (maxPriceInput) maxPriceInput.value = maxPrice;

        // –û—Ü–µ–Ω–∫–∞
        const ratingMinInput = document.getElementById('rating-min');
        if (ratingMinInput) ratingMinInput.value = ratingMin;

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        document.querySelectorAll('input[name="features[]"]').forEach(checkbox => {
            checkbox.checked = selectedFeatures.includes(checkbox.value);
        });
    }




document.addEventListener("DOMContentLoaded", function () {
    const btnBook = document.querySelector(".btn-book.tour");
    const footer = document.querySelector(".footer"); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É —Ñ—É—Ç–µ—Ä–∞ –∫–ª–∞—Å—Å .footer
    console.log("Button:", btnBook);
    console.log("Footer:", footer);
    function updateButtonPosition() {
        const footerRect = footer.getBoundingClientRect(); // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ñ—É—Ç–µ—Ä–∞
        const windowHeight = window.innerHeight; // –í—ã—Å–æ—Ç–∞ –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞
        const buttonHeight = btnBook.offsetHeight; // –í—ã—Å–æ—Ç–∞ –∫–Ω–æ–ø–∫–∏

        // –ï—Å–ª–∏ —Ñ—É—Ç–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É
        if (footerRect.top <= windowHeight) {
            const spaceAboveFooter = footerRect.top - buttonHeight - 20; // –û—Å—Ç–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø 20px
            btnBook.style.bottom = `${spaceAboveFooter}px`; // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—ã—à–µ —Ñ—É—Ç–µ—Ä–∞
        } else {
            btnBook.style.bottom = "20px"; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑ —ç–∫—Ä–∞–Ω–∞
        }
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener("scroll", updateButtonPosition);
    window.addEventListener("resize", updateButtonPosition);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    updateButtonPosition();
});

